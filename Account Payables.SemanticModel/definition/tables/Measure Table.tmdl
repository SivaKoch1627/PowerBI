table 'Measure Table'
	lineageTag: 76b5b8ec-2805-47f5-a5d6-c9d6d5e5fbb2

	measure 'Average AP' =
			
			Var carrier_amount = SUM(FactInvoice[CarrierInvoiceAmount])
			var invoice_Count = DISTINCTCOUNT(FactInvoice[InvoiceNumber])
			var AP = carrier_amount/invoice_Count
			Return AP+0
		formatString: \$#,0;(\$#,0);\$#,0
		lineageTag: 745a8d37-eb07-423a-879c-acccfa0e4ab4

	measure 'Current Due' =
			
			VAR Current_Payables = [Total Account Payables] - [Past Due]
			RETURN Current_Payables+ 0
		formatString: \$#,0;(\$#,0);\$#,0
		lineageTag: 6f05b97c-0b6b-4302-a76e-854b933bb7f1

	measure 'Past Due' =
			
			VAR Past_Payables= Calculate(Sum('FactInvoice'[BalanceDue]),keepfilters('FactInvoice'[Aging Range] <> "< 0" ))
			return Past_Payables+0
		formatString: \$#,0;(\$#,0);\$#,0
		lineageTag: c71e60ac-b951-417b-8f29-55b3ffee5138

	measure 'Total Account Payables' =
			
			VAR Account_Payables = SUM(FactInvoice[BalanceDue])
			RETURN Account_Payables+ 0
		formatString: \$#,0;(\$#,0);\$#,0
		lineageTag: cb493c21-31ac-4c29-a07c-593fc67cca6f

	measure PaymentClosurePeriod =
			
			VAR a = SUM(FactInvoice[Closure Days])
			VAR b = CALCULATE(DISTINCTCOUNT(FactInvoice[InvoiceNumber]), FactInvoice[Open / Closed] = "Closed")
			VAR c = ROUND(DIVIDE(a, b),0)
			RETURN c & " Days"
		lineageTag: 7a4c6d84-5031-483a-bd91-8546f332f841

	measure DPO =
			Var accountPayables = [Total Account Payables]
			var COGS = [Total Cogs]
			var c = ROUND((accountPayables/COGS),0)
			return c & " Days"
		lineageTag: 51330152-e227-47c4-a3bf-dc7876d9fc66

	measure 'Total Cogs' = ```
			
			 var COGS = SUM(FactInvoice[COGS])
			 VAR daycount = DISTINCTCOUNT(FactInvoice[Invoice Date])
			 var c = COGS/daycount
			 return c + 0
			```
		formatString: 0
		lineageTag: 0f372fc3-d342-4b20-a9d4-c24bbd23a8b2

	measure '91-180 Days Past Terms' =
			
			VAR AgingAmount =
			    CALCULATE (
			        SUM ( FactInvoice[BalanceDue] ),
			        KEEPFILTERS ( 'FactInvoice'[Aging Range] = "91-180" )
			    )
			RETURN
			    AgingAmount + 0
		formatString: \$#,0;(\$#,0);\$#,0
		lineageTag: 4968b069-3ce1-4f86-b482-4c1303d91c14

	measure '1-30 Days Past Terms' =
			
			VAR AgingAmount =
			    CALCULATE (
			        SUM ( FactInvoice[BalanceDue] ),
			        KEEPFILTERS ( 'FactInvoice'[Aging Range] = "1-30" )
			    )
			RETURN
			    AgingAmount + 0
		formatString: \$#,0;(\$#,0);\$#,0
		lineageTag: b091b9ba-f1ab-4b63-8596-9a59397d3a7d

	measure '31-60 Days Past Terms' =
			
			VAR AgingAmount =
			    CALCULATE (
			        SUM ( FactInvoice[BalanceDue] ),
			        KEEPFILTERS ( 'FactInvoice'[Aging Range] = "31-60" )
			    )
			RETURN
			    AgingAmount + 0
		formatString: \$#,0;(\$#,0);\$#,0
		lineageTag: 16833e91-8e8c-4fc2-b6f5-d986c016fa59

	measure '61-90 Days Past Terms' =
			
			VAR AgingAmount =
			    CALCULATE (
			        SUM ( FactInvoice[BalanceDue] ),
			        KEEPFILTERS ( 'FactInvoice'[Aging Range] = "61-90" )
			    )
			RETURN
			    AgingAmount + 0
		formatString: \$#,0;(\$#,0);\$#,0
		lineageTag: fa35fb76-5f21-4bea-a8ff-921760368bf7

	measure '181-365 Days Past Terms' =
			
			VAR AgingAmount =
			    CALCULATE (
			        SUM ( FactInvoice[BalanceDue] ),
			        KEEPFILTERS ( 'FactInvoice'[Aging Range] = "181-365" )
			    )
			RETURN
			    AgingAmount + 0
		formatString: \$#,0;(\$#,0);\$#,0
		lineageTag: 6af273dc-63a9-4778-a423-7ffc5bab6f98

	measure '> 365 Days Past Terms' =
			
			VAR AgingAmount =
			    CALCULATE (
			        SUM ( FactInvoice[BalanceDue] ),
			        KEEPFILTERS ( 'FactInvoice'[Aging Range] = ">365" )
			    )
			RETURN
			    AgingAmount + 0
		formatString: \$#,0;(\$#,0);\$#,0
		lineageTag: c1cd8196-4de1-4fee-abf7-58e438657ab8

	measure '46-60 Days Past Terms' =
			
			VAR AgingAmount =
			    CALCULATE (
			        SUM ( FactInvoice[BalanceDue] ),
			        KEEPFILTERS ( 'FactInvoice'[Aging Range] = "46-60" )
			    )
			RETURN
			    AgingAmount + 0
		formatString: 0
		lineageTag: 9927fbbf-4fed-464b-825c-75c695df94f2

	measure 'Today''s Date' = MONTH(TODAY()) & "/" & DAY(TODAY()) & "/" & YEAR(TODAY())
		lineageTag: 8dd9f33a-70a5-49e9-9e41-8c8634e67128

	measure 'Report Title APDetail' = CONCATENATE("AP Details : ",[Today's Date])
		lineageTag: 01fdf6b5-e804-4da9-9ad6-335e0363e9f7

	measure 'Last Refreshed Date' = CONCATENATE("Last Refreshed Date : ",FORMAT(NOW(), "M/D/YYYY h:mm" & " ET"))
		lineageTag: a93eb33f-9f62-4970-8404-a44c18620eaa

	measure 'Delayed Payment' = ```
			var a = CALCULATE(DISTINCTCOUNT(FactInvoice[InvoiceNumber]),FactInvoice[Open / Closed] = "Closed")
			var b = [Total Delayed payments]
			Var c = b /a 
			Return c
			
			```
		formatString: 0%;-0%;0%
		lineageTag: 558ebab2-7073-417c-aa6c-bc92e013153e

	measure 'Delayed Payment%' = ```
			var a = CALCULATE(DISTINCTCOUNT(FactInvoice[InvoiceNumber]),FactInvoice[Open / Closed] = "Open")
			var b = [TotalOpenPayments]
			Var c = b /a 
			Return c
			
			```
		formatString: 0%;-0%;0%
		lineageTag: cf32b4ea-f94d-4da3-92f1-3266f0ea5754

	measure 'Total Delayed payments' = CALCULATE(COUNT('FactInvoice'[InvoiceNumber]),FILTER('FactInvoice',FactInvoice[Payment Status]="Delay"))
		formatString: 0
		lineageTag: c8e84278-20f6-4802-85b9-e3a801098eb0

	measure TotalOpenPayments = ```
			VAR Openpayments =
			CALCULATE(
			    COUNT('FactInvoice'[InvoiceNumber]),
			    FILTER(
			        'FactInvoice',
			        FactInvoice[Open / Closed] = "Open" &&
			        FactInvoice[Aging Range] <> "< 0" &&
			        NOT(ISBLANK(FactInvoice[Aging Range]))
			    )
			)
			return Openpayments+0
			
			```
		formatString: 0
		lineageTag: 6ef6c355-77bb-446b-bfdf-5602989169b6

	measure 'Delayed Temp' = ```
			var a = CALCULATE(DISTINCTCOUNT(FactInvoice[InvoiceNumber]),FactInvoice[Open / Closed] = "Open",REMOVEFILTERS(FactInvoice[Carrier / Vendor]))
			var b = [TotalOpenPayments]
			Var c = b /a 
			Return c
			```
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 9a1c07aa-0f32-4b8a-9646-b288481225a8

	partition 'Measure Table' = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Column1", type text}}),
				    #"Removed Columns" = Table.RemoveColumns(#"Changed Type",{"Column1"})
				in
				    #"Removed Columns"

	annotation PBI_ResultType = Table

